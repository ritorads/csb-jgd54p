{"version":3,"sources":["components/CardBoard.js","utility/handleResponse.js","components/App.js","index.js"],"names":["CustomAlertLeft","react_default","a","createElement","CustomAlertRight","showEndMessage","alert","handleSwipeLeft","handleSwipeRight","CardBoard","props","react_swipe_card_default","alertRight","CardBoard_CustomAlertRight","alertLeft","CardBoard_CustomAlertLeft","onEnd","className","userList","map","item","i","react_swipe_card","key","onSwipeLeft","onSwipeRight","src","img","alt","name","age","handleResponse","res","status","console","error","Promise","reject","resolve","data","results","library","add","fas","App","_React$Component","Object","inherits","_super","createSuper","_this","classCallCheck","this","call","state","userCount","getUserInfo","bind","assertThisInitialized","createClass","value","_this2","axios","get","params","gender","then","result","length","push","last","picture","large","dob","setState","index_es","icon","components_CardBoard","React","Component","rootElement","document","getElementById","ReactDOM","render","components_App"],"mappings":"kRAIMA,EAAkB,WAAH,OAASC,EAAAC,EAAAC,cAAA,2DAGxBC,EAAmB,WAAH,OAASH,EAAAC,EAAAC,cAAA,+CAGzBE,EAAiB,WACrBC,MAAM,2DAIFC,EAAkB,aAKlBC,EAAmB,WACvBF,MAAM,qDAgCOG,EA7BG,SAAAC,GAChB,OACET,EAAAC,EAAAC,cAACQ,EAAAT,EAAK,CACJU,WAAYX,EAAAC,EAAAC,cAACU,EAAgB,MAC7BC,UAAWb,EAAAC,EAAAC,cAACY,EAAe,MAC3BC,MAAOX,EACPY,UAAU,SAETP,EAAMQ,SAASC,IAAI,SAACC,EAAMC,GACzB,OACEpB,EAAAC,EAAAC,cAACmB,EAAA,KAAI,CACHC,IAAKF,EACLG,YAAajB,EACbkB,aAAcjB,GAEdP,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACbhB,EAAAC,EAAAC,cAAA,OAAKuB,IAAKN,EAAKO,IAAKC,IAAI,MAE1B3B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,cACbhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,cAAcG,EAAKS,MAClC5B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aAAaG,EAAKU,IAAG,gBCpCnCC,EARQ,SAAAC,GACrB,OAAmB,MAAfA,EAAIC,QACNC,QAAQC,MAAMH,EAAIG,OACXC,QAAQC,OAAO,aAAeL,EAAIG,QAEpCC,QAAQE,QAAQN,EAAIO,KAAKC,oCCGlCC,IAAQC,IAAIC,KAAK,IAoDFC,EAlDN,SAAAC,GAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAAA,IAAAG,EAAAF,OAAAG,EAAA,EAAAH,CAAAF,GACP,SAAAA,EAAYlC,GAAO,IAAAwC,EAO8B,OAP9BJ,OAAAK,EAAA,EAAAL,CAAAM,KAAAR,IACjBM,EAAAF,EAAAK,KAAAD,KAAM1C,IACD4C,MAAQ,CACXpC,SAAU,GACVqC,UAAW,IAGbL,EAAKM,YAAcN,EAAKM,YAAYC,KAAKX,OAAAY,EAAA,EAAAZ,CAAAI,IAAMA,EAuChD,OAtCAJ,OAAAa,EAAA,EAAAb,CAAAF,EAAA,EAAArB,IAAA,cAAAqC,MAED,WAAc,IAAAC,EAAAT,KACZ,OAAOU,IACJC,IAAI,6BAA8B,CACjCC,OAAQ,CAAExB,QAAS,IAAKyB,OAAQ,UAEjCC,KAAK,SAAAC,GAAM,OAAIpC,EAAeoC,KAC9BD,KAAK,SAAAC,GAEJ,IADA,IAAMjD,EAAW,GACRG,EAAI,EAAGA,EAAI8C,EAAOC,OAAQ/C,IACjCH,EAASmD,KAAK,CACZxC,KAAMsC,EAAO9C,GAAGQ,KAAKyC,KACrB3C,IAAKwC,EAAO9C,GAAGkD,QAAQC,MACvB1C,IAAKqC,EAAO9C,GAAGoD,IAAI3C,MAGvB,IAAMyB,EAAYrC,EAASkD,OAC3BP,EAAKa,SAAS,CAAExD,WAAUqC,kBAE/B,CAAAhC,IAAA,oBAAAqC,MAED,WACER,KAAKI,gBACN,CAAAjC,IAAA,SAAAqC,MAED,WACE,OACE3D,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACbhB,EAAAC,EAAAC,cAAA,MAAIc,UAAU,cAAY,2BACnBmC,KAAKE,MAAMC,UAAS,qBACzBtD,EAAAC,EAAAC,cAAA,WAAM,gEAGRF,EAAAC,EAAAC,cAACwE,EAAA,EAAe,CAAC1D,UAAU,YAAY2D,KAAM,CAAC,MAAO,WACrD3E,EAAAC,EAAAC,cAAC0E,EAAS,CAAC3D,SAAUkC,KAAKE,MAAMpC,gBAGrC0B,EA/CM,CAASkC,IAAMC,WCJlBC,UAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAG,MAAKL","file":"static/js/main.f1ed63e5.chunk.js","sourcesContent":["import React from \"react\";\nimport Cards, { Card } from \"react-swipe-card\";\n\n// 左にスワイプした時に表示する要素\nconst CustomAlertLeft = () => <span>ごめんあそばせ</span>;\n\n// 右にスワイプした時に表示する要素\nconst CustomAlertRight = () => <span>よろこんで</span>;\n\n// 全てのカードをスワイプした後の処理\nconst showEndMessage = () => {\n  alert(\"いいねはありません\");\n};\n\n// 左にスワイプした時の処理\nconst handleSwipeLeft = () => {\n  return;\n};\n\n// 右にスワイプした時の処理\nconst handleSwipeRight = () => {\n  alert(\"マッチしました！\");\n};\n\nconst CardBoard = props => {\n  return (\n    <Cards\n      alertRight={<CustomAlertRight />}\n      alertLeft={<CustomAlertLeft />}\n      onEnd={showEndMessage}\n      className=\"cards\"\n    >\n      {props.userList.map((item, i) => {\n        return (\n          <Card\n            key={i}\n            onSwipeLeft={handleSwipeLeft}\n            onSwipeRight={handleSwipeRight}\n          >\n            <div className=\"card__img\">\n              <img src={item.img} alt=\"\" />\n            </div>\n            <div className=\"card__info\">\n              <div className=\"card__name\">{item.name}</div>\n              <div className=\"card__age\">{item.age}歳</div>\n            </div>\n          </Card>\n        );\n      })}\n    </Cards>\n  );\n};\n\nexport default CardBoard;\n","const handleResponse = res => {\n  if (res.status !== 200) {\n    console.error(res.error);\n    return Promise.reject(\"API Error:\" + res.error);\n  }\n  return Promise.resolve(res.data.results);\n};\n\nexport default handleResponse;\n","import React from \"react\";\nimport axios from \"axios\";\nimport CardBoard from \"./CardBoard\";\nimport handleResponse from \"../utility/handleResponse\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(fas);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userList: [],\n      userCount: \"\"\n    };\n\n    this.getUserInfo = this.getUserInfo.bind(this);\n  }\n\n  getUserInfo() {\n    return axios\n      .get(\"https://randomuser.me/api/\", {\n        params: { results: 114, gender: \"male\" }\n      })\n      .then(result => handleResponse(result))\n      .then(result => {\n        const userList = [];\n        for (let i = 0; i < result.length; i++) {\n          userList.push({\n            name: result[i].name.last,\n            img: result[i].picture.large,\n            age: result[i].dob.age\n          });\n        }\n        const userCount = userList.length;\n        this.setState({ userList, userCount });\n      });\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">\n          あなたに{this.state.userCount}人から\n          <br />\n          いいねが届いています\n        </h1>\n        <FontAwesomeIcon className=\"heartIcon\" icon={[\"fas\", \"heart\"]} />\n        <CardBoard userList={this.state.userList} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}